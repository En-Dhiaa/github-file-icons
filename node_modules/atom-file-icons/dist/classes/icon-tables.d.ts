import Icon from './icon';
import type { IconDb } from '../types';
export type IconMap = Record<string, Icon>;
export interface IconCache {
    directoryName: IconMap;
    directoryPath: IconMap;
    fileName: IconMap;
    filePath: IconMap;
    interpreter: IconMap;
    scope: IconMap;
    language: IconMap;
    signature: IconMap;
}
export interface IconTable {
    byName: Icon[];
    byInterpreter: Icon[];
    byLanguage: Icon[];
    byPath: Icon[];
    byScope: Icon[];
    bySignature: Icon[];
}
/**
 * Create IconTables instance
 */
export default class IconTables {
    /** Icons to match directory-type resources. */
    directoryIcons: IconTable;
    /** Icons to match file resources. */
    fileIcons: IconTable;
    /** Icon for binary files. */
    binaryIcon: Icon | null;
    /** Icon for executables. */
    executableIcon: Icon | null;
    constructor(data: IconDb);
    /**
     * Match an icon using a resource's basename.
     *
     * @param name - Name of filesystem entity
     * @param isDirectory - Match folders instead of files
     */
    matchName(name: string, isDirectory?: boolean): Icon | null;
    /**
     * Match an icon using a resource's system path.
     *
     * @param path - Full pathname to check
     * @param directory - Match folders instead of files
     */
    matchPath(path: string, directory?: boolean): Icon | null;
    /**
     * Match an icon using the human-readable form of its related language.
     *
     * Typically used for matching modelines and Linguist-language attributes.
     *
     * @example IconTables.matchLanguage("JavaScript")
     * @param name - Name/alias of language
     */
    matchLanguage(name: string): Icon | null;
    /**
     * Match an icon using the grammar-scope assigned to it.
     *
     * @example IconTables.matchScope("source.js")
     * @param name - Name of scope
     */
    matchScope(name: string): Icon | null;
    /**
     * Match an icon using the name of an interpreter which executes its language.
     *
     * Used for matching interpreter directives (a.k.a., "hashbangs").
     *
     * @example IconTables.matchInterpreter("bash")
     */
    matchInterpreter(name: string): Icon | null;
}
