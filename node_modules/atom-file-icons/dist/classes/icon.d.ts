import type { ColorModeIndex, IconBase, IconColor } from '../types';
/**
 * Icon instance
 *
 * @see {@link https://github.com/websemantics/file-icons-js/blob/master/index.js#L1107}
 */
export default class Icon {
    /** Index of the icon's appearance in the enclosing array */
    index: number;
    /** Icon's CSS class (e.g., "js-icon") */
    icon: string;
    /** Icon's color classes */
    color: IconColor;
    /** Pattern for matching names or pathnames */
    match: RegExp;
    /** priority that determined icon's order of appearance */
    priority: number;
    /** Match against system path instead of basename */
    matchPath: boolean;
    /** to match executable names in hashbangs */
    interpreter: RegExp | null;
    /** to match grammar scope-names */
    scope: RegExp | null;
    /** to match alias patterns */
    lang: RegExp | null;
    /** to match file signatures */
    signature: RegExp | null;
    constructor(index: number, data: IconBase);
    /**
     * Return the CSS classes for displaying the icon as a string.
     *
     * @param colorMode - The color mode index to use for the color class.
     * @returns The icon classes as a string.
     */
    getClass(colorMode?: ColorModeIndex | null): string;
    /**
     * Return the CSS classes for displaying the icon as an array.
     *
     * @param colorMode - The color mode index to use for the color class.
     * @returns The icon classes as an array.
     */
    getClassList(colorMode?: ColorModeIndex): string[];
}
