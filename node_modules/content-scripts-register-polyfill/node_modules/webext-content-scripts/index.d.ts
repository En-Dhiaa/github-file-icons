import type { ExtensionTypes } from 'webextension-polyfill';
import type { ContentScript } from './types';
declare type MaybeArray<X> = X | X[];
interface Target {
    tabId: number;
    frameId: number;
}
export declare function executeFunction<Fn extends (...args: any[]) => unknown>(target: number | Target, function_: Fn, ...args: unknown[]): Promise<ReturnType<Fn>>;
interface InjectionDetails {
    tabId: number;
    frameId?: number;
    matchAboutBlank?: boolean;
    allFrames?: boolean;
    runAt?: ExtensionTypes.RunAt;
    files: string[] | Array<{
        code: string;
    } | {
        file: string;
    }>;
}
export declare function insertCSS({ tabId, frameId, files, allFrames, matchAboutBlank, runAt, }: InjectionDetails): void;
export declare function executeScript({ tabId, frameId, files, allFrames, matchAboutBlank, runAt, }: InjectionDetails): Promise<void>;
export declare function injectContentScript(target: number | Target, scripts: MaybeArray<ContentScript>): Promise<void>;
export {};
